// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URI")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id        String    @id @default(cuid())
  firstName String?
  lastName  String?
  username  String?   @unique
  email     String?   @unique
  password  String
  age       Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model Wallet {
  id         String @id @default(cuid())
  publicKey  String
  // TODO: Think about alternative instead privateKey since we're willing to use HD Wallets too.
  privateKey String

  isHD   Boolean? @default(false)
  isBusy Boolean  @default(false)

  balance BigInt @default(0)

  lastCheckedAt DateTime? @default(now())
  createdAt     DateTime? @default(now())
  updatedAt     DateTime? @default(now())

  history  HistoricalWallet[]
  payments Payment[]
}

model HistoricalWallet {
  id        String   @id @default(cuid())
  timestamp DateTime @default(now())

  balance BigInt

  blockNumber     Int?
  transactionHash String?

  walletId String
  wallet   Wallet @relation(fields: [walletId], references: [id])
}

model Purchase {
  id String @id @default(uuid())
  // Payment Payment[]
}

model Payment {
  id String @id @default(uuid())

  amount BigInt
  paid   BigInt
  status String

  walletId String
  // purchaseId String

  wallet Wallet @relation(fields: [walletId], references: [id])
  // purchase Purchase @relation(fields: [purchaseId], references: [id])
}

model Event {
  id Int @id @unique @default(sequence())

  event       String
  description String?

  raw_information Json?
  hash            String?

  timestamp DateTime @default(now())
  level     String?  @default("info")
}
